* v0.0.1 (June 10th, 2015)
  - (...)


* v1.0 (September 12th, 2016)
  - (...)


* v1.1 (February 20th, 2017)

  - macOS and Windows support
  - New checks:
    child-event-qobject-cast
    ctor-missing-parent-argument
    returning-data-from-temporary
    qt-macros
    base-class-event
    connect-non-signal
    incorrect-emit
    tr-non-literal
  - Fixes against clang 4.0
  - Fixes against Qt 5.9
  - 60% performance improvement
  - Fixed many false positives


* v1.2 (July 8th, 2017)
  - clazy-standalone executable. Allows to run clazy against a JSON compilation database
    instead of as a plugin. clang-tidy doesn't support loading external modules (https://bugs.llvm.org/show_bug.cgi?id=32739)
    so this is a good workaround.
  - qt-compat mode. Allows to disable Qt5 specific checks by passing -Xclang -plugin-arg-clang-lazy -Xclang qt4-compat
  - New checks:
    install-event-filter
    qcolor-from-literal
    strict-iterators
    connect-not-normalized
  - returning-data-from-temporary now checks for temporary QByteArrays casting to char* when returned
  - returning-data-from-temporary now checks for assignment too, not only return statements
  - unused-non-trivial-variable now warns for unused QList, QVector and many more types
  - ASTMatchers based checks are now supported
  - clang 3.7 was dropped due to ASTMatchers source incompatibilities.
    Use clazy v1.1 for clang >= 3.6 support
  - clazylib.so no longer gets built by default, only the plugin (ClangLazy.so)
    gets built. Pass -DCLAZY_BUILD_UTILS_LIB=ON to enable the utils library if
    you're developing tools using clazy's convenience functions, which you're
    probably not.
  - CLAZY_INSTALL_NO_HEADERS option was removed. Either install the utils library
    and headers or nothing at all. By default nothing is installed, except
    the plugin and man pages.

* v1.3 (November 26th, 2017)
  - New checks:
    thread-with-slots
    connect-3arg-lambda
    qproperty-without-notify
    virtual-signal
    overridden-signal
    qhash-namespace
    const-signal-or-slot
    lambda-unique-connection
  - missing-qobject-macro is now a level2 check, instead of level1. Because,
    people can omit Q_OBJECT intentionally.
  - Added -only-qt option, which will make clazy bailout early on non-Qt files.
    For this purpose, the definition of a Qt file is whenever -DQT_CORE_LIB is passed, which is usually the case in most build systems.
  - Added -qt-developer option, when building Qt with clazy it will honour specific guidelines for Qt, which are not many right now but the
    list will grow.

* v1.4 ()
  - New Checks:
    connect-by-name
    skipped-base-class
  - auto-unexpected-qstringbuilder now also warns for lambdas returning QStringBuilder
  - performance optimizations
