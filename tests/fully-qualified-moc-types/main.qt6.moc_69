/****************************************************************************
** Meta object code from reading C++ file 'main.cpp'
**
** Created by: The Qt Meta Object Compiler version 69 (Qt 6.9.0)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qmetatype.h>

#include <QtCore/qtmochelpers.h>

#include <memory>


#include <QtCore/qxptype_traits.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'main.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 69
#error "This file was generated using the moc from 6.9.0. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

#ifndef Q_CONSTINIT
#define Q_CONSTINIT
#endif

QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
QT_WARNING_DISABLE_GCC("-Wuseless-cast")
namespace {
struct qt_meta_tag_ZN19NonNamespacedGadgetE_t {};
} // unnamed namespace

template <> constexpr inline auto NonNamespacedGadget::qt_create_metaobjectdata<qt_meta_tag_ZN19NonNamespacedGadgetE_t>()
{
    namespace QMC = QtMocConstants;
    QtMocHelpers::StringRefStorage qt_stringData {
        "NonNamespacedGadget"
    };

    QtMocHelpers::UintData qt_methods {
    };
    QtMocHelpers::UintData qt_properties {
    };
    QtMocHelpers::UintData qt_enums {
    };
    return QtMocHelpers::metaObjectData<NonNamespacedGadget, qt_meta_tag_ZN19NonNamespacedGadgetE_t>(QMC::PropertyAccessInStaticMetaCall, qt_stringData,
            qt_methods, qt_properties, qt_enums);
}
Q_CONSTINIT const QMetaObject NonNamespacedGadget::staticMetaObject = { {
    nullptr,
    qt_staticMetaObjectStaticContent<qt_meta_tag_ZN19NonNamespacedGadgetE_t>.stringdata,
    qt_staticMetaObjectStaticContent<qt_meta_tag_ZN19NonNamespacedGadgetE_t>.data,
    nullptr,
    nullptr,
    qt_staticMetaObjectRelocatingContent<qt_meta_tag_ZN19NonNamespacedGadgetE_t>.metaTypes,
    nullptr
} };

namespace {
struct qt_meta_tag_ZN2NS16NamespacedGadgetE_t {};
} // unnamed namespace

template <> constexpr inline auto NS::NamespacedGadget::qt_create_metaobjectdata<qt_meta_tag_ZN2NS16NamespacedGadgetE_t>()
{
    namespace QMC = QtMocConstants;
    QtMocHelpers::StringRefStorage qt_stringData {
        "NS::NamespacedGadget"
    };

    QtMocHelpers::UintData qt_methods {
    };
    QtMocHelpers::UintData qt_properties {
    };
    QtMocHelpers::UintData qt_enums {
    };
    return QtMocHelpers::metaObjectData<NamespacedGadget, qt_meta_tag_ZN2NS16NamespacedGadgetE_t>(QMC::PropertyAccessInStaticMetaCall, qt_stringData,
            qt_methods, qt_properties, qt_enums);
}
Q_CONSTINIT const QMetaObject NS::NamespacedGadget::staticMetaObject = { {
    nullptr,
    qt_staticMetaObjectStaticContent<qt_meta_tag_ZN2NS16NamespacedGadgetE_t>.stringdata,
    qt_staticMetaObjectStaticContent<qt_meta_tag_ZN2NS16NamespacedGadgetE_t>.data,
    nullptr,
    nullptr,
    qt_staticMetaObjectRelocatingContent<qt_meta_tag_ZN2NS16NamespacedGadgetE_t>.metaTypes,
    nullptr
} };

namespace {
struct qt_meta_tag_ZN2NS8MyObjectE_t {};
} // unnamed namespace

template <> constexpr inline auto NS::MyObject::qt_create_metaobjectdata<qt_meta_tag_ZN2NS8MyObjectE_t>()
{
    namespace QMC = QtMocConstants;
    QtMocHelpers::StringRefStorage qt_stringData {
        "NS::MyObject",
        "mysig",
        "",
        "NS::MyType",
        "mysig2",
        "MyType&",
        "mysig3",
        "mysig4",
        "mysig5",
        "A",
        "mysig6",
        "mysig7",
        "const A*",
        "mysig8",
        "A*",
        "myslot1",
        "myslot2",
        "MyType",
        "myslot3",
        "myslot4",
        "myslot5",
        "myslot6",
        "myslot7",
        "myslot8",
        "myinvokable1",
        "myinvokable2",
        "myinvokable3",
        "myinvokable4",
        "myinvokable5",
        "myinvokable6",
        "myinvokable7",
        "myinvokable8",
        "myinvokable9",
        "MyType*",
        "foo",
        "foo1",
        "enumFoo",
        "EnumFoo",
        "namespacedGadget",
        "NamespacedGadget",
        "namespacedGadget2",
        "NS::NamespacedGadget",
        "nonNamespacedGadget",
        "NonNamespacedGadget"
    };

    QtMocHelpers::UintData qt_methods {
        // Signal 'mysig'
        QtMocHelpers::SignalData<void(NS::MyType)>(1, 2, QMC::AccessPublic, QMetaType::Void, {{
            { 0x80000000 | 3, 2 },
        }}),
        // Signal 'mysig2'
        QtMocHelpers::SignalData<void(MyType &)>(4, 2, QMC::AccessPublic, QMetaType::Void, {{
            { 0x80000000 | 5, 2 },
        }}),
        // Signal 'mysig3'
        QtMocHelpers::SignalData<void(NS::MyType)>(6, 2, QMC::AccessPublic, QMetaType::Void, {{
            { 0x80000000 | 3, 2 },
        }}),
        // Signal 'mysig4'
        QtMocHelpers::SignalData<void(const NS::MyType &)>(7, 2, QMC::AccessPublic, QMetaType::Void, {{
            { 0x80000000 | 3, 2 },
        }}),
        // Signal 'mysig5'
        QtMocHelpers::SignalData<void(A)>(8, 2, QMC::AccessPublic, QMetaType::Void, {{
            { 0x80000000 | 9, 2 },
        }}),
        // Signal 'mysig6'
        QtMocHelpers::SignalData<void(const A)>(10, 2, QMC::AccessPublic, QMetaType::Void, {{
            { 0x80000000 | 9, 2 },
        }}),
        // Signal 'mysig7'
        QtMocHelpers::SignalData<void(const A *)>(11, 2, QMC::AccessPublic, QMetaType::Void, {{
            { 0x80000000 | 12, 2 },
        }}),
        // Signal 'mysig8'
        QtMocHelpers::SignalData<void(A *)>(13, 2, QMC::AccessPublic, QMetaType::Void, {{
            { 0x80000000 | 14, 2 },
        }}),
        // Slot 'myslot1'
        QtMocHelpers::SlotData<void(NS::MyType)>(15, 2, QMC::AccessPublic, QMetaType::Void, {{
            { 0x80000000 | 3, 2 },
        }}),
        // Slot 'myslot2'
        QtMocHelpers::SlotData<void(MyType)>(16, 2, QMC::AccessPublic, QMetaType::Void, {{
            { 0x80000000 | 17, 2 },
        }}),
        // Slot 'myslot3'
        QtMocHelpers::SlotData<void(NS::MyType)>(18, 2, QMC::AccessPublic, QMetaType::Void, {{
            { 0x80000000 | 3, 2 },
        }}),
        // Slot 'myslot4'
        QtMocHelpers::SlotData<void(const NS::MyType &)>(19, 2, QMC::AccessPublic, QMetaType::Void, {{
            { 0x80000000 | 3, 2 },
        }}),
        // Slot 'myslot5'
        QtMocHelpers::SlotData<void(A)>(20, 2, QMC::AccessPublic, QMetaType::Void, {{
            { 0x80000000 | 9, 2 },
        }}),
        // Slot 'myslot6'
        QtMocHelpers::SlotData<void(const A)>(21, 2, QMC::AccessPublic, QMetaType::Void, {{
            { 0x80000000 | 9, 2 },
        }}),
        // Slot 'myslot7'
        QtMocHelpers::SlotData<void(const A *)>(22, 2, QMC::AccessPublic, QMetaType::Void, {{
            { 0x80000000 | 12, 2 },
        }}),
        // Slot 'myslot8'
        QtMocHelpers::SlotData<void(A *)>(23, 2, QMC::AccessPublic, QMetaType::Void, {{
            { 0x80000000 | 14, 2 },
        }}),
        // Method 'myinvokable1'
        QtMocHelpers::MethodData<void(NS::MyType)>(24, 2, QMC::AccessPublic, QMetaType::Void, {{
            { 0x80000000 | 3, 2 },
        }}),
        // Method 'myinvokable2'
        QtMocHelpers::MethodData<void(MyType)>(25, 2, QMC::AccessPublic, QMetaType::Void, {{
            { 0x80000000 | 17, 2 },
        }}),
        // Method 'myinvokable3'
        QtMocHelpers::MethodData<void(NS::MyType)>(26, 2, QMC::AccessPublic, QMetaType::Void, {{
            { 0x80000000 | 3, 2 },
        }}),
        // Method 'myinvokable4'
        QtMocHelpers::MethodData<void(const NS::MyType &)>(27, 2, QMC::AccessPublic, QMetaType::Void, {{
            { 0x80000000 | 3, 2 },
        }}),
        // Method 'myinvokable5'
        QtMocHelpers::MethodData<void(A)>(28, 2, QMC::AccessPublic, QMetaType::Void, {{
            { 0x80000000 | 9, 2 },
        }}),
        // Method 'myinvokable6'
        QtMocHelpers::MethodData<void(const A)>(29, 2, QMC::AccessPublic, QMetaType::Void, {{
            { 0x80000000 | 9, 2 },
        }}),
        // Method 'myinvokable7'
        QtMocHelpers::MethodData<void(const A *)>(30, 2, QMC::AccessPublic, QMetaType::Void, {{
            { 0x80000000 | 12, 2 },
        }}),
        // Method 'myinvokable8'
        QtMocHelpers::MethodData<void(A *)>(31, 2, QMC::AccessPublic, QMetaType::Void, {{
            { 0x80000000 | 14, 2 },
        }}),
        // Method 'myinvokable9'
        QtMocHelpers::MethodData<MyType *(NS::MyType)>(32, 2, QMC::AccessPublic, 0x80000000 | 33, {{
            { 0x80000000 | 3, 2 },
        }}),
    };
    QtMocHelpers::UintData qt_properties {
        // property 'foo'
        QtMocHelpers::PropertyData<NS::MyType>(34, 0x80000000 | 3, QMC::DefaultPropertyFlags | QMC::EnumOrFlag),
        // property 'foo1'
        QtMocHelpers::PropertyData<MyType>(35, 0x80000000 | 17, QMC::DefaultPropertyFlags | QMC::EnumOrFlag),
        // property 'enumFoo'
        QtMocHelpers::PropertyData<EnumFoo>(36, 0x80000000 | 37, QMC::DefaultPropertyFlags | QMC::EnumOrFlag | QMC::Constant),
        // property 'namespacedGadget'
        QtMocHelpers::PropertyData<NamespacedGadget>(38, 0x80000000 | 39, QMC::DefaultPropertyFlags | QMC::EnumOrFlag | QMC::Constant),
        // property 'namespacedGadget2'
        QtMocHelpers::PropertyData<NS::NamespacedGadget>(40, 0x80000000 | 41, QMC::DefaultPropertyFlags | QMC::EnumOrFlag | QMC::Constant),
        // property 'nonNamespacedGadget'
        QtMocHelpers::PropertyData<NonNamespacedGadget>(42, 0x80000000 | 43, QMC::DefaultPropertyFlags | QMC::EnumOrFlag | QMC::Constant),
    };
    QtMocHelpers::UintData qt_enums {
    };
    return QtMocHelpers::metaObjectData<MyObject, qt_meta_tag_ZN2NS8MyObjectE_t>(QMC::MetaObjectFlag{}, qt_stringData,
            qt_methods, qt_properties, qt_enums);
}
Q_CONSTINIT const QMetaObject NS::MyObject::staticMetaObject = { {
    QMetaObject::SuperData::link<QObject::staticMetaObject>(),
    qt_staticMetaObjectStaticContent<qt_meta_tag_ZN2NS8MyObjectE_t>.stringdata,
    qt_staticMetaObjectStaticContent<qt_meta_tag_ZN2NS8MyObjectE_t>.data,
    qt_static_metacall,
    nullptr,
    qt_staticMetaObjectRelocatingContent<qt_meta_tag_ZN2NS8MyObjectE_t>.metaTypes,
    nullptr
} };

void NS::MyObject::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    auto *_t = static_cast<MyObject *>(_o);
    if (_c == QMetaObject::InvokeMetaMethod) {
        switch (_id) {
        case 0: _t->mysig((*reinterpret_cast< std::add_pointer_t<NS::MyType>>(_a[1]))); break;
        case 1: _t->mysig2((*reinterpret_cast< std::add_pointer_t<MyType&>>(_a[1]))); break;
        case 2: _t->mysig3((*reinterpret_cast< std::add_pointer_t<NS::MyType>>(_a[1]))); break;
        case 3: _t->mysig4((*reinterpret_cast< std::add_pointer_t<NS::MyType>>(_a[1]))); break;
        case 4: _t->mysig5((*reinterpret_cast< std::add_pointer_t<A>>(_a[1]))); break;
        case 5: _t->mysig6((*reinterpret_cast< std::add_pointer_t<A>>(_a[1]))); break;
        case 6: _t->mysig7((*reinterpret_cast< std::add_pointer_t<const A*>>(_a[1]))); break;
        case 7: _t->mysig8((*reinterpret_cast< std::add_pointer_t<A*>>(_a[1]))); break;
        case 8: _t->myslot1((*reinterpret_cast< std::add_pointer_t<NS::MyType>>(_a[1]))); break;
        case 9: _t->myslot2((*reinterpret_cast< std::add_pointer_t<MyType>>(_a[1]))); break;
        case 10: _t->myslot3((*reinterpret_cast< std::add_pointer_t<NS::MyType>>(_a[1]))); break;
        case 11: _t->myslot4((*reinterpret_cast< std::add_pointer_t<NS::MyType>>(_a[1]))); break;
        case 12: _t->myslot5((*reinterpret_cast< std::add_pointer_t<A>>(_a[1]))); break;
        case 13: _t->myslot6((*reinterpret_cast< std::add_pointer_t<A>>(_a[1]))); break;
        case 14: _t->myslot7((*reinterpret_cast< std::add_pointer_t<const A*>>(_a[1]))); break;
        case 15: _t->myslot8((*reinterpret_cast< std::add_pointer_t<A*>>(_a[1]))); break;
        case 16: _t->myinvokable1((*reinterpret_cast< std::add_pointer_t<NS::MyType>>(_a[1]))); break;
        case 17: _t->myinvokable2((*reinterpret_cast< std::add_pointer_t<MyType>>(_a[1]))); break;
        case 18: _t->myinvokable3((*reinterpret_cast< std::add_pointer_t<NS::MyType>>(_a[1]))); break;
        case 19: _t->myinvokable4((*reinterpret_cast< std::add_pointer_t<NS::MyType>>(_a[1]))); break;
        case 20: _t->myinvokable5((*reinterpret_cast< std::add_pointer_t<A>>(_a[1]))); break;
        case 21: _t->myinvokable6((*reinterpret_cast< std::add_pointer_t<A>>(_a[1]))); break;
        case 22: _t->myinvokable7((*reinterpret_cast< std::add_pointer_t<const A*>>(_a[1]))); break;
        case 23: _t->myinvokable8((*reinterpret_cast< std::add_pointer_t<A*>>(_a[1]))); break;
        case 24: { MyType* _r = _t->myinvokable9((*reinterpret_cast< std::add_pointer_t<NS::MyType>>(_a[1])));
            if (_a[0]) *reinterpret_cast< MyType**>(_a[0]) = std::move(_r); }  break;
        default: ;
        }
    }
    if (_c == QMetaObject::IndexOfMethod) {
        if (QtMocHelpers::indexOfMethod<void (MyObject::*)(NS::MyType )>(_a, &MyObject::mysig, 0))
            return;
        if (QtMocHelpers::indexOfMethod<void (MyObject::*)(MyType & )>(_a, &MyObject::mysig2, 1))
            return;
        if (QtMocHelpers::indexOfMethod<void (MyObject::*)(NS::MyType )>(_a, &MyObject::mysig3, 2))
            return;
        if (QtMocHelpers::indexOfMethod<void (MyObject::*)(const NS::MyType & )>(_a, &MyObject::mysig4, 3))
            return;
        if (QtMocHelpers::indexOfMethod<void (MyObject::*)(A )>(_a, &MyObject::mysig5, 4))
            return;
        if (QtMocHelpers::indexOfMethod<void (MyObject::*)(const A )>(_a, &MyObject::mysig6, 5))
            return;
        if (QtMocHelpers::indexOfMethod<void (MyObject::*)(const A * )>(_a, &MyObject::mysig7, 6))
            return;
        if (QtMocHelpers::indexOfMethod<void (MyObject::*)(A * )>(_a, &MyObject::mysig8, 7))
            return;
    }
    if (_c == QMetaObject::ReadProperty) {
        void *_v = _a[0];
        switch (_id) {
        case 0: *reinterpret_cast<NS::MyType*>(_v) = _t->foo(); break;
        case 1: *reinterpret_cast<MyType*>(_v) = _t->foo(); break;
        case 2: *reinterpret_cast<EnumFoo*>(_v) = _t->enumFoo(); break;
        case 3: *reinterpret_cast<NamespacedGadget*>(_v) = _t->namespacedGadget(); break;
        case 4: *reinterpret_cast<NS::NamespacedGadget*>(_v) = _t->namespacedGadget2(); break;
        case 5: *reinterpret_cast<NonNamespacedGadget*>(_v) = _t->nonNamespacedGadget(); break;
        default: break;
        }
    }
}

const QMetaObject *NS::MyObject::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *NS::MyObject::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_staticMetaObjectStaticContent<qt_meta_tag_ZN2NS8MyObjectE_t>.strings))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int NS::MyObject::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 25)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 25;
    }
    if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 25)
            *reinterpret_cast<QMetaType *>(_a[0]) = QMetaType();
        _id -= 25;
    }
    if (_c == QMetaObject::ReadProperty || _c == QMetaObject::WriteProperty
            || _c == QMetaObject::ResetProperty || _c == QMetaObject::BindableProperty
            || _c == QMetaObject::RegisterPropertyMetaType) {
        qt_static_metacall(this, _c, _id, _a);
        _id -= 6;
    }
    return _id;
}

// SIGNAL 0
void NS::MyObject::mysig(NS::MyType _t1)
{
    QMetaObject::activate<void>(this, &staticMetaObject, 0, nullptr, _t1);
}

// SIGNAL 1
void NS::MyObject::mysig2(MyType & _t1)
{
    QMetaObject::activate<void>(this, &staticMetaObject, 1, nullptr, _t1);
}

// SIGNAL 2
void NS::MyObject::mysig3(NS::MyType _t1)
{
    QMetaObject::activate<void>(this, &staticMetaObject, 2, nullptr, _t1);
}

// SIGNAL 3
void NS::MyObject::mysig4(const NS::MyType & _t1)
{
    QMetaObject::activate<void>(this, &staticMetaObject, 3, nullptr, _t1);
}

// SIGNAL 4
void NS::MyObject::mysig5(A _t1)
{
    QMetaObject::activate<void>(this, &staticMetaObject, 4, nullptr, _t1);
}

// SIGNAL 5
void NS::MyObject::mysig6(const A _t1)
{
    QMetaObject::activate<void>(this, &staticMetaObject, 5, nullptr, _t1);
}

// SIGNAL 6
void NS::MyObject::mysig7(const A * _t1)
{
    QMetaObject::activate<void>(this, &staticMetaObject, 6, nullptr, _t1);
}

// SIGNAL 7
void NS::MyObject::mysig8(A * _t1)
{
    QMetaObject::activate<void>(this, &staticMetaObject, 7, nullptr, _t1);
}
namespace {
struct qt_meta_tag_ZN6MyObj2E_t {};
} // unnamed namespace

template <> constexpr inline auto MyObj2::qt_create_metaobjectdata<qt_meta_tag_ZN6MyObj2E_t>()
{
    namespace QMC = QtMocConstants;
    QtMocHelpers::StringRefStorage qt_stringData {
        "MyObj2",
        "mySig",
        "",
        "AnnonFoo",
        "unqualPairParam",
        "std::pair<bool,QualMe>",
        "unqualPairClass",
        "pair<bool,QualMe>",
        "fullyQUalPair",
        "std::pair<bool,MyObj2::QualMe>",
        "typeAlias",
        "MyList",
        "genericWithoutFullyQual",
        "QList<QualMe>",
        "genericFullyQual",
        "QList<MyObj2::QualMe>",
        "qstringListTypealias",
        "fullTypeAlias",
        "MyObj2::MyList",
        "unqualGenericDbusReply",
        "QDBusPendingReply<QualMe>",
        "boolDbusReply",
        "QDBusPendingReply<bool>",
        "voidDbusReply",
        "QDBusPendingReply<>",
        "typedefInGeneric",
        "QDBusPendingReply<MyList>",
        "nestedGeneric",
        "QDBusPendingReply<std::shared_ptr<MyObj2>>",
        "nestedNotFullyQualifiedGeneric",
        "QDBusPendingReply<std::shared_ptr<MyList>>",
        "notQualWithModifier",
        "myList",
        "DummyListAlias<int>"
    };

    QtMocHelpers::UintData qt_methods {
        // Signal 'mySig'
        QtMocHelpers::SignalData<void(AnnonFoo)>(1, 2, QMC::AccessPublic, QMetaType::Void, {{
            { 0x80000000 | 3, 2 },
        }}),
        // Slot 'unqualPairParam'
        QtMocHelpers::SlotData<std::pair<bool,QualMe>()>(4, 2, QMC::AccessPublic, 0x80000000 | 5),
        // Slot 'unqualPairClass'
        QtMocHelpers::SlotData<pair<bool,QualMe>()>(6, 2, QMC::AccessPublic, 0x80000000 | 7),
        // Slot 'fullyQUalPair'
        QtMocHelpers::SlotData<std::pair<bool,MyObj2::QualMe>()>(8, 2, QMC::AccessPublic, 0x80000000 | 9),
        // Slot 'typeAlias'
        QtMocHelpers::SlotData<MyList()>(10, 2, QMC::AccessPublic, 0x80000000 | 11),
        // Slot 'genericWithoutFullyQual'
        QtMocHelpers::SlotData<QList<QualMe>()>(12, 2, QMC::AccessPublic, 0x80000000 | 13),
        // Slot 'genericFullyQual'
        QtMocHelpers::SlotData<QList<MyObj2::QualMe>()>(14, 2, QMC::AccessPublic, 0x80000000 | 15),
        // Slot 'qstringListTypealias'
        QtMocHelpers::SlotData<QStringList()>(16, 2, QMC::AccessPublic, QMetaType::QStringList),
        // Slot 'fullTypeAlias'
        QtMocHelpers::SlotData<MyObj2::MyList()>(17, 2, QMC::AccessPublic, 0x80000000 | 18),
        // Slot 'unqualGenericDbusReply'
        QtMocHelpers::SlotData<QDBusPendingReply<QualMe>()>(19, 2, QMC::AccessPublic, 0x80000000 | 20),
        // Slot 'boolDbusReply'
        QtMocHelpers::SlotData<QDBusPendingReply<bool>()>(21, 2, QMC::AccessPublic, 0x80000000 | 22),
        // Slot 'voidDbusReply'
        QtMocHelpers::SlotData<QDBusPendingReply<>()>(23, 2, QMC::AccessPublic, 0x80000000 | 24),
        // Slot 'typedefInGeneric'
        QtMocHelpers::SlotData<QDBusPendingReply<MyList>()>(25, 2, QMC::AccessPublic, 0x80000000 | 26),
        // Slot 'nestedGeneric'
        QtMocHelpers::SlotData<void(QDBusPendingReply<std::shared_ptr<MyObj2>>)>(27, 2, QMC::AccessPublic, QMetaType::Void, {{
            { 0x80000000 | 28, 2 },
        }}),
        // Slot 'nestedNotFullyQualifiedGeneric'
        QtMocHelpers::SlotData<void(QDBusPendingReply<std::shared_ptr<MyList>>)>(29, 2, QMC::AccessPublic, QMetaType::Void, {{
            { 0x80000000 | 30, 2 },
        }}),
        // Slot 'notQualWithModifier'
        QtMocHelpers::SlotData<void()>(31, 2, QMC::AccessPublic, QMetaType::Void),
        // Slot 'myList'
        QtMocHelpers::SlotData<DummyListAlias<int>()>(32, 2, QMC::AccessPublic, 0x80000000 | 33),
    };
    QtMocHelpers::UintData qt_properties {
    };
    QtMocHelpers::UintData qt_enums {
    };
    return QtMocHelpers::metaObjectData<MyObj2, qt_meta_tag_ZN6MyObj2E_t>(QMC::MetaObjectFlag{}, qt_stringData,
            qt_methods, qt_properties, qt_enums);
}
Q_CONSTINIT const QMetaObject MyObj2::staticMetaObject = { {
    QMetaObject::SuperData::link<QObject::staticMetaObject>(),
    qt_staticMetaObjectStaticContent<qt_meta_tag_ZN6MyObj2E_t>.stringdata,
    qt_staticMetaObjectStaticContent<qt_meta_tag_ZN6MyObj2E_t>.data,
    qt_static_metacall,
    nullptr,
    qt_staticMetaObjectRelocatingContent<qt_meta_tag_ZN6MyObj2E_t>.metaTypes,
    nullptr
} };

void MyObj2::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    auto *_t = static_cast<MyObj2 *>(_o);
    if (_c == QMetaObject::InvokeMetaMethod) {
        switch (_id) {
        case 0: _t->mySig((*reinterpret_cast< std::add_pointer_t<AnnonFoo>>(_a[1]))); break;
        case 1: { std::pair<bool,QualMe> _r = _t->unqualPairParam();
            if (_a[0]) *reinterpret_cast< std::pair<bool,QualMe>*>(_a[0]) = std::move(_r); }  break;
        case 2: { pair<bool,QualMe> _r = _t->unqualPairClass();
            if (_a[0]) *reinterpret_cast< pair<bool,QualMe>*>(_a[0]) = std::move(_r); }  break;
        case 3: { std::pair<bool,MyObj2::QualMe> _r = _t->fullyQUalPair();
            if (_a[0]) *reinterpret_cast< std::pair<bool,MyObj2::QualMe>*>(_a[0]) = std::move(_r); }  break;
        case 4: { MyList _r = _t->typeAlias();
            if (_a[0]) *reinterpret_cast< MyList*>(_a[0]) = std::move(_r); }  break;
        case 5: { QList<QualMe> _r = _t->genericWithoutFullyQual();
            if (_a[0]) *reinterpret_cast< QList<QualMe>*>(_a[0]) = std::move(_r); }  break;
        case 6: { QList<MyObj2::QualMe> _r = _t->genericFullyQual();
            if (_a[0]) *reinterpret_cast< QList<MyObj2::QualMe>*>(_a[0]) = std::move(_r); }  break;
        case 7: { QStringList _r = _t->qstringListTypealias();
            if (_a[0]) *reinterpret_cast< QStringList*>(_a[0]) = std::move(_r); }  break;
        case 8: { MyObj2::MyList _r = _t->fullTypeAlias();
            if (_a[0]) *reinterpret_cast< MyObj2::MyList*>(_a[0]) = std::move(_r); }  break;
        case 9: { QDBusPendingReply<QualMe> _r = _t->unqualGenericDbusReply();
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QualMe>*>(_a[0]) = std::move(_r); }  break;
        case 10: { QDBusPendingReply<bool> _r = _t->boolDbusReply();
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<bool>*>(_a[0]) = std::move(_r); }  break;
        case 11: { QDBusPendingReply<> _r = _t->voidDbusReply();
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = std::move(_r); }  break;
        case 12: { QDBusPendingReply<MyList> _r = _t->typedefInGeneric();
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<MyList>*>(_a[0]) = std::move(_r); }  break;
        case 13: _t->nestedGeneric((*reinterpret_cast< std::add_pointer_t<QDBusPendingReply<std::shared_ptr<MyObj2>>>>(_a[1]))); break;
        case 14: _t->nestedNotFullyQualifiedGeneric((*reinterpret_cast< std::add_pointer_t<QDBusPendingReply<std::shared_ptr<MyList>>>>(_a[1]))); break;
        case 15: _t->notQualWithModifier(); break;
        case 16: { DummyListAlias<int> _r = _t->myList();
            if (_a[0]) *reinterpret_cast< DummyListAlias<int>*>(_a[0]) = std::move(_r); }  break;
        default: ;
        }
    }
    if (_c == QMetaObject::IndexOfMethod) {
        if (QtMocHelpers::indexOfMethod<void (MyObj2::*)(AnnonFoo )>(_a, &MyObj2::mySig, 0))
            return;
    }
}

const QMetaObject *MyObj2::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *MyObj2::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_staticMetaObjectStaticContent<qt_meta_tag_ZN6MyObj2E_t>.strings))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int MyObj2::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 17)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 17;
    }
    if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 17)
            *reinterpret_cast<QMetaType *>(_a[0]) = QMetaType();
        _id -= 17;
    }
    return _id;
}

// SIGNAL 0
void MyObj2::mySig(AnnonFoo _t1)
{
    QMetaObject::activate<void>(this, &staticMetaObject, 0, nullptr, _t1);
}
QT_WARNING_POP
